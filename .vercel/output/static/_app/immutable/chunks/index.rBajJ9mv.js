import{R as $,J as _,a0 as y,h as S,d as E,a1 as O,O as w,a2 as b,U as p,a3 as C,a4 as I,a5 as x,a6 as R,a7 as U,a8 as j,a9 as B,aa as J}from"./scheduler.Q2oRtGFl.js";const u=new Set;let d;function A(){d={r:0,c:[],p:d}}function D(){d.r||$(d.c),d=d.p}function L(t,e){t&&t.i&&(u.delete(t),t.i(e))}function F(t,e,n,s){if(t&&t.o){if(u.has(t))return;u.add(t),d.c.push(()=>{u.delete(t),s&&(n&&t.d(1),s())}),t.o(e)}else s&&s()}function G(t){t&&t.c()}function H(t,e){t&&t.l(e)}function M(t,e,n){const{fragment:s,after_update:i}=t.$$;s&&s.m(e,n),p(()=>{const f=t.$$.on_mount.map(R).filter(w);t.$$.on_destroy?t.$$.on_destroy.push(...f):$(f),t.$$.on_mount=[]}),i.forEach(p)}function N(t,e){const n=t.$$;n.fragment!==null&&(C(n.after_update),$(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function P(t,e){t.$$.dirty[0]===-1&&(U.push(t),j(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function K(t,e,n,s,i,f,c=null,v=[-1]){const o=I;x(t);const a=t.$$={fragment:null,ctx:[],props:f,update:_,not_equal:i,bound:y(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(o?o.$$.context:[])),callbacks:y(),dirty:v,skip_bound:!1,root:e.target||o.$$.root};c&&c(a.root);let l=!1;if(a.ctx=n?n(t,e.props||{},(r,h,...g)=>{const m=g.length?g[0]:h;return a.ctx&&i(a.ctx[r],a.ctx[r]=m)&&(!a.skip_bound&&a.bound[r]&&a.bound[r](m),l&&P(t,r)),h}):[],a.update(),l=!0,$(a.before_update),a.fragment=s?s(a.ctx):!1,e.target){if(e.hydrate){B();const r=S(e.target);a.fragment&&a.fragment.l(r),r.forEach(E)}else a.fragment&&a.fragment.c();e.intro&&L(t.$$.fragment),M(t,e.target,e.anchor),J(),O()}x(o)}class Q{$$=void 0;$$set=void 0;$destroy(){N(this,1),this.$destroy=_}$on(e,n){if(!w(n))return _;const s=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return s.push(n),()=>{const i=s.indexOf(n);i!==-1&&s.splice(i,1)}}$set(e){this.$$set&&!b(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const V="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(V);export{Q as S,L as a,G as b,D as c,H as d,N as e,A as g,K as i,M as m,F as t};
